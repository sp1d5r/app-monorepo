"use strict";
(self["webpackChunk_app_monorepo_storybook"] = self["webpackChunk_app_monorepo_storybook"] || []).push([["vendors-node_modules_tamagui_button_dist_esm_Button_mjs-node_modules_tamagui_shorthands_dist_-f03cd4"],{

/***/ "../../node_modules/@tamagui/button/dist/esm/Button.mjs":
/*!**************************************************************!*\
  !*** ../../node_modules/@tamagui/button/dist/esm/Button.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* binding */ Button2),
/* harmony export */   ButtonContext: () => (/* binding */ ButtonContext),
/* harmony export */   ButtonFrame: () => (/* binding */ ButtonFrame),
/* harmony export */   ButtonIcon: () => (/* binding */ ButtonIcon),
/* harmony export */   ButtonText: () => (/* binding */ ButtonText),
/* harmony export */   useButton: () => (/* binding */ useButton)
/* harmony export */ });
/* harmony import */ var _tamagui_font_size__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tamagui/font-size */ "../../node_modules/@tamagui/font-size/dist/esm/getFontSize.mjs");
/* harmony import */ var _tamagui_get_button_sized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tamagui/get-button-sized */ "../../node_modules/@tamagui/get-button-sized/dist/esm/index.mjs");
/* harmony import */ var _tamagui_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tamagui/helpers */ "../../node_modules/@tamagui/helpers/dist/esm/index.mjs");
/* harmony import */ var _tamagui_helpers_tamagui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tamagui/helpers-tamagui */ "../../node_modules/@tamagui/helpers-tamagui/dist/esm/index.mjs");
/* harmony import */ var _tamagui_stacks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tamagui/stacks */ "../../node_modules/@tamagui/stacks/dist/esm/ThemeableStack.mjs");
/* harmony import */ var _tamagui_stacks__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tamagui/stacks */ "../../node_modules/@tamagui/stacks/dist/esm/NestingContext.mjs");
/* harmony import */ var _tamagui_text__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tamagui/text */ "../../node_modules/@tamagui/text/dist/esm/SizableText.mjs");
/* harmony import */ var _tamagui_text__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @tamagui/text */ "../../node_modules/@tamagui/text/dist/esm/wrapChildrenInText.mjs");
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/helpers/createStyledContext.mjs");
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/styled.mjs");
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/hooks/useProps.mjs");
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/createVariable.mjs");
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/createComponent.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/react/jsx-runtime.js");
/* provided dependency */ var process = __webpack_require__(/*! ../../node_modules/process/browser.js */ "../../node_modules/process/browser.js");









const ButtonContext = (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_5__.createStyledContext)({
    // keeping these here means they work with styled() passing down color to text
    color: void 0,
    ellipse: void 0,
    fontFamily: void 0,
    fontSize: void 0,
    fontStyle: void 0,
    fontWeight: void 0,
    letterSpacing: void 0,
    maxFontSizeMultiplier: void 0,
    size: void 0,
    textAlign: void 0,
    variant: void 0
  }),
  BUTTON_NAME = "Button",
  ButtonFrame = (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_6__.styled)(_tamagui_stacks__WEBPACK_IMPORTED_MODULE_7__.ThemeableStack, {
    name: BUTTON_NAME,
    tag: "button",
    context: ButtonContext,
    role: "button",
    focusable: !0,
    variants: {
      unstyled: {
        false: {
          size: "$true",
          justifyContent: "center",
          alignItems: "center",
          flexWrap: "nowrap",
          flexDirection: "row",
          cursor: "pointer",
          hoverTheme: !0,
          pressTheme: !0,
          backgrounded: !0,
          borderWidth: 1,
          borderColor: "transparent",
          focusVisibleStyle: {
            outlineColor: "$outlineColor",
            outlineStyle: "solid",
            outlineWidth: 2
          }
        }
      },
      variant: {
        outlined: {
          backgroundColor: "transparent",
          borderWidth: 2,
          borderColor: "$borderColor",
          hoverStyle: {
            backgroundColor: "transparent",
            borderColor: "$borderColorHover"
          },
          pressStyle: {
            backgroundColor: "transparent",
            borderColor: "$borderColorPress"
          },
          focusVisibleStyle: {
            backgroundColor: "transparent",
            borderColor: "$borderColorFocus"
          }
        }
      },
      size: {
        "...size": _tamagui_get_button_sized__WEBPACK_IMPORTED_MODULE_0__.getButtonSized,
        ":number": _tamagui_get_button_sized__WEBPACK_IMPORTED_MODULE_0__.getButtonSized
      },
      disabled: {
        true: {
          pointerEvents: "none"
        }
      }
    },
    defaultVariants: {
      unstyled: process.env.TAMAGUI_HEADLESS === "1"
    }
  }),
  ButtonText = (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_6__.styled)(_tamagui_text__WEBPACK_IMPORTED_MODULE_8__.SizableText, {
    name: "Button",
    context: ButtonContext,
    variants: {
      unstyled: {
        false: {
          userSelect: "none",
          cursor: "pointer",
          // flexGrow 1 leads to inconsistent native style where text pushes to start of view
          flexGrow: 0,
          flexShrink: 1,
          ellipse: !0,
          color: "$color"
        }
      }
    },
    defaultVariants: {
      unstyled: process.env.TAMAGUI_HEADLESS === "1"
    }
  }),
  ButtonIcon = props => {
    const {
        children,
        scaleIcon = 1
      } = props,
      {
        size,
        color
      } = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ButtonContext),
      iconSize = (typeof size == "number" ? size * 0.5 : (0,_tamagui_font_size__WEBPACK_IMPORTED_MODULE_9__.getFontSize)(size)) * scaleIcon;
    return (0,_tamagui_helpers_tamagui__WEBPACK_IMPORTED_MODULE_2__.useGetThemedIcon)({
      size: iconSize,
      color
    })(children);
  },
  ButtonComponent = ButtonFrame.styleable(function (props, ref) {
    const {
      props: buttonProps
    } = useButton(props);
    return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(ButtonFrame, {
      "data-disable-theme": !0,
      ...buttonProps,
      ref
    });
  }),
  Button2 = (0,_tamagui_helpers__WEBPACK_IMPORTED_MODULE_1__.withStaticProperties)(ButtonComponent, {
    Text: ButtonText,
    Icon: ButtonIcon
  });
function useButton({
  textProps,
  ...propsIn
}, {
  Text = Button2.Text
} = {
  Text: Button2.Text
}) {
  const isNested = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(_tamagui_stacks__WEBPACK_IMPORTED_MODULE_10__.ButtonNestingContext),
    propsActive = (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_11__.useProps)(propsIn, {
      noNormalize: !0,
      noExpand: !0
    }),
    {
      icon,
      iconAfter,
      space,
      spaceFlex,
      scaleIcon = 1,
      scaleSpace = 0.66,
      separator,
      noTextWrap,
      fontFamily,
      fontSize,
      fontWeight,
      fontStyle,
      letterSpacing,
      tag,
      ellipse,
      maxFontSizeMultiplier,
      ...restProps
    } = propsActive,
    size = propsActive.size || (propsActive.unstyled ? void 0 : "$true"),
    color = propsActive.color,
    iconSize = (typeof size == "number" ? size * 0.5 : (0,_tamagui_font_size__WEBPACK_IMPORTED_MODULE_9__.getFontSize)(size, {
      font: fontFamily?.[0] === "$" ? fontFamily : void 0
    })) * scaleIcon,
    getThemedIcon = (0,_tamagui_helpers_tamagui__WEBPACK_IMPORTED_MODULE_2__.useGetThemedIcon)({
      size: iconSize,
      color
    }),
    [themedIcon, themedIconAfter] = [icon, iconAfter].map(getThemedIcon),
    spaceSize = space ?? (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_12__.getVariableValue)(iconSize) * scaleSpace,
    contents = noTextWrap ? [propsIn.children] : (0,_tamagui_text__WEBPACK_IMPORTED_MODULE_13__.wrapChildrenInText)(Text, {
      children: propsIn.children,
      fontFamily,
      fontSize,
      textProps,
      fontWeight,
      fontStyle,
      letterSpacing,
      ellipse,
      maxFontSizeMultiplier
    }, Text === ButtonText && propsActive.unstyled !== !0 ? {
      unstyled: process.env.TAMAGUI_HEADLESS === "1",
      size
    } : void 0),
    inner = (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_14__.spacedChildren)({
      // a bit arbitrary but scaling to font size is necessary so long as button does
      space: spaceSize === !1 ? 0 : spaceSize == !0 ? "$true" : spaceSize,
      spaceFlex,
      ensureKeys: !0,
      separator,
      direction: propsActive.flexDirection === "column" || propsActive.flexDirection === "column-reverse" ? "vertical" : "horizontal",
      // for keys to stay the same we keep indices as similar a possible
      // so even if icons are undefined we still pass them
      children: [themedIcon, ...contents, themedIconAfter]
    }),
    props = {
      size,
      ...(propsIn.disabled && {
        // in rnw - false still has keyboard tabIndex, undefined = not actually focusable
        focusable: void 0,
        // even with tabIndex unset, it will keep focusVisibleStyle on web so disable it here
        focusVisibleStyle: {
          borderColor: "$background"
        }
      }),
      // fixes SSR issue + DOM nesting issue of not allowing button in button
      tag: tag ?? (isNested ? "span" :
      // defaults to <a /> when accessibilityRole = link
      // see https://github.com/tamagui/tamagui/issues/505
      propsActive.accessibilityRole === "link" || propsActive.role === "link" ? "a" : "button"),
      ...restProps,
      children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_tamagui_stacks__WEBPACK_IMPORTED_MODULE_10__.ButtonNestingContext.Provider, {
        value: !0,
        children: inner
      }),
      // forces it to be a runtime pressStyle so it passes through context text colors
      disableClassName: !0
    };
  return {
    spaceSize,
    isNested,
    props
  };
}

//# sourceMappingURL=Button.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/font-size/dist/esm/getFontSize.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/@tamagui/font-size/dist/esm/getFontSize.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFontSize: () => (/* binding */ getFontSize),
/* harmony export */   getFontSizeToken: () => (/* binding */ getFontSizeToken),
/* harmony export */   getFontSizeVariable: () => (/* binding */ getFontSizeVariable)
/* harmony export */ });
/* harmony import */ var _tamagui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tamagui/core */ "../../node_modules/@tamagui/web/dist/esm/createVariable.mjs");
/* harmony import */ var _tamagui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tamagui/core */ "../../node_modules/@tamagui/web/dist/esm/config.mjs");

const getFontSize = (inSize, opts) => {
    const res = getFontSizeVariable(inSize, opts);
    return (0,_tamagui_core__WEBPACK_IMPORTED_MODULE_0__.isVariable)(res) ? +res.val : res ? +res : 16;
  },
  getFontSizeVariable = (inSize, opts) => {
    const token = getFontSizeToken(inSize, opts);
    if (!token) return inSize;
    const conf = (0,_tamagui_core__WEBPACK_IMPORTED_MODULE_1__.getConfig)();
    return conf.fontsParsed[opts?.font || conf.defaultFontToken]?.size[token];
  },
  getFontSizeToken = (inSize, opts) => {
    if (typeof inSize == "number") return null;
    const relativeSize = opts?.relativeSize || 0,
      conf = (0,_tamagui_core__WEBPACK_IMPORTED_MODULE_1__.getConfig)(),
      fontSize = conf.fontsParsed[opts?.font || conf.defaultFontToken]?.size ||
      // fallback to size tokens
      conf.tokensParsed.size,
      size = (inSize === "$true" && !("$true" in fontSize) ? "$4" : inSize) ?? ("$true" in fontSize ? "$true" : "$4"),
      sizeTokens = Object.keys(fontSize);
    let foundIndex = sizeTokens.indexOf(size);
    foundIndex === -1 && size.endsWith(".5") && (foundIndex = sizeTokens.indexOf(size.replace(".5", ""))),  true && foundIndex === -1 && console.warn("No font size found", size, opts, "in size tokens", sizeTokens);
    const tokenIndex = Math.min(Math.max(0, foundIndex + relativeSize), sizeTokens.length - 1);
    return sizeTokens[tokenIndex] ?? size;
  };

//# sourceMappingURL=getFontSize.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/get-button-sized/dist/esm/index.mjs":
/*!***********************************************************************!*\
  !*** ../../node_modules/@tamagui/get-button-sized/dist/esm/index.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getButtonSized: () => (/* binding */ getButtonSized)
/* harmony export */ });
/* harmony import */ var _tamagui_get_token__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tamagui/get-token */ "../../node_modules/@tamagui/get-token/dist/esm/index.mjs");

const getButtonSized = (val, {
  tokens,
  props
}) => {
  if (!val || props.circular) return;
  if (typeof val == "number") return {
    paddingHorizontal: val * 0.25,
    height: val,
    borderRadius: props.circular ? 1e5 : val * 0.2
  };
  const xSize = (0,_tamagui_get_token__WEBPACK_IMPORTED_MODULE_0__.getSpace)(val),
    radiusToken = tokens.radius[val] ?? tokens.radius.$true;
  return {
    paddingHorizontal: xSize,
    height: val,
    borderRadius: props.circular ? 1e5 : radiusToken
  };
};

//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/get-font-sized/dist/esm/index.mjs":
/*!*********************************************************************!*\
  !*** ../../node_modules/@tamagui/get-font-sized/dist/esm/index.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFontSized: () => (/* binding */ getFontSized)
/* harmony export */ });
/* harmony import */ var _tamagui_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tamagui/constants */ "../../node_modules/@tamagui/constants/dist/esm/index.mjs");
/* harmony import */ var _tamagui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tamagui/core */ "../../node_modules/@tamagui/web/dist/esm/config.mjs");


const getFontSized = (sizeTokenIn = "$true", {
    font,
    fontFamily,
    props
  }) => {
    if (!font) return {
      fontSize: sizeTokenIn
    };
    const sizeToken = sizeTokenIn === "$true" ? getDefaultSizeToken(font) : sizeTokenIn,
      style = {},
      fontSize = font.size[sizeToken],
      lineHeight = font.lineHeight?.[sizeToken],
      fontWeight = font.weight?.[sizeToken],
      letterSpacing = font.letterSpacing?.[sizeToken],
      textTransform = font.transform?.[sizeToken],
      fontStyle = props.fontStyle ?? font.style?.[sizeToken],
      color = props.color ?? font.color?.[sizeToken];
    return fontStyle && (style.fontStyle = fontStyle), textTransform && (style.textTransform = textTransform), fontFamily && (style.fontFamily = fontFamily), fontWeight && (style.fontWeight = fontWeight), letterSpacing && (style.letterSpacing = letterSpacing), fontSize && (style.fontSize = fontSize), lineHeight && (style.lineHeight = lineHeight), color && (style.color = color),  true && props.debug && props.debug === "verbose" && (console.groupCollapsed("  \u{1F539} getFontSized", sizeTokenIn, sizeToken), _tamagui_constants__WEBPACK_IMPORTED_MODULE_0__.isClient && console.info({
      style,
      props,
      font
    }), console.groupEnd()), style;
  },
  cache = /* @__PURE__ */new WeakMap();
function getDefaultSizeToken(font) {
  if (typeof font == "object" && cache.has(font)) return cache.get(font);
  const sizeTokens = "$true" in font.size ? font.size : (0,_tamagui_core__WEBPACK_IMPORTED_MODULE_1__.getTokens)().size,
    sizeDefault = sizeTokens.$true,
    sizeDefaultSpecific = sizeDefault ? Object.keys(sizeTokens).find(x => x !== "$true" && sizeTokens[x].val === sizeDefault.val) : null;
  return !sizeDefault || !sizeDefaultSpecific ? ( true && console.warn(`No default size is set in your tokens for the "true" key, fonts will be inconsistent.

      Fix this by having consistent tokens across fonts and sizes and setting a true key for your size tokens, or
      set true keys for all your font tokens: "size", "lineHeight", "fontStyle", etc.`), Object.keys(font.size)[3]) : (cache.set(font, sizeDefaultSpecific), sizeDefaultSpecific);
}

//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/get-token/dist/esm/index.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@tamagui/get-token/dist/esm/index.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getRadius: () => (/* binding */ getRadius),
/* harmony export */   getSize: () => (/* binding */ getSize),
/* harmony export */   getSpace: () => (/* binding */ getSpace),
/* harmony export */   getTokenRelative: () => (/* binding */ getTokenRelative),
/* harmony export */   stepTokenUpOrDown: () => (/* binding */ stepTokenUpOrDown)
/* harmony export */ });
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/config.mjs");
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/createVariable.mjs");

const defaultOptions = {
    shift: 0,
    bounds: [0]
  },
  getSize = (size, options) => getTokenRelative("size", size, options),
  getSpace = (space, options) => getTokenRelative("space", space, options),
  getRadius = (radius, options) => getTokenRelative("radius", radius, options),
  cacheVariables = {},
  cacheWholeVariables = {},
  cacheKeys = {},
  cacheWholeKeys = {},
  stepTokenUpOrDown = (type, current, options = defaultOptions) => {
    const tokens = (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_0__.getTokens)({
      prefixed: !0
    })[type];
    if (!(type in cacheVariables)) {
      cacheKeys[type] = [], cacheVariables[type] = [], cacheWholeKeys[type] = [], cacheWholeVariables[type] = [];
      const sorted = Object.keys(tokens).map(k => tokens[k]).sort((a, b) => a.val - b.val);
      for (const token of sorted) cacheKeys[type].push(token.key), cacheVariables[type].push(token);
      const sortedExcludingHalfSteps = sorted.filter(x => !x.key.endsWith(".5"));
      for (const token of sortedExcludingHalfSteps) cacheWholeKeys[type].push(token.key), cacheWholeVariables[type].push(token);
    }
    const isString = typeof current == "string",
      tokensOrdered = (options.excludeHalfSteps ? isString ? cacheWholeKeys : cacheWholeVariables : isString ? cacheKeys : cacheVariables)[type],
      min = options.bounds?.[0] ?? 0,
      max = options.bounds?.[1] ?? tokensOrdered.length - 1,
      currentIndex = tokensOrdered.indexOf(current);
    let shift = options.shift || 0;
    shift && (current === "$true" || (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_1__.isVariable)(current) && current.name === "true") && (shift += shift > 0 ? 1 : -1);
    const index = Math.min(max, Math.max(min, currentIndex + shift)),
      found = tokensOrdered[index];
    return (typeof found == "string" ? tokens[found] : found) || tokens.$true;
  },
  getTokenRelative = stepTokenUpOrDown;

//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/helpers-tamagui/dist/esm/index.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/@tamagui/helpers-tamagui/dist/esm/index.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StyleObjectIdentifier: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.StyleObjectIdentifier),
/* harmony export */   StyleObjectProperty: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.StyleObjectProperty),
/* harmony export */   StyleObjectPseudo: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.StyleObjectPseudo),
/* harmony export */   StyleObjectRules: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.StyleObjectRules),
/* harmony export */   StyleObjectValue: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.StyleObjectValue),
/* harmony export */   clamp: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.clamp),
/* harmony export */   composeEventHandlers: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.composeEventHandlers),
/* harmony export */   concatClassName: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.concatClassName),
/* harmony export */   prevent: () => (/* reexport safe */ _prevent_mjs__WEBPACK_IMPORTED_MODULE_1__.prevent),
/* harmony export */   shouldRenderNativePlatform: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.shouldRenderNativePlatform),
/* harmony export */   simpleHash: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.simpleHash),
/* harmony export */   stylePropsAll: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.stylePropsAll),
/* harmony export */   stylePropsText: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.stylePropsText),
/* harmony export */   stylePropsTextOnly: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.stylePropsTextOnly),
/* harmony export */   stylePropsTransform: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.stylePropsTransform),
/* harmony export */   stylePropsUnitless: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.stylePropsUnitless),
/* harmony export */   stylePropsView: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.stylePropsView),
/* harmony export */   tokenCategories: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.tokenCategories),
/* harmony export */   useCurrentColor: () => (/* reexport safe */ _useCurrentColor_mjs__WEBPACK_IMPORTED_MODULE_2__.useCurrentColor),
/* harmony export */   useGetThemedIcon: () => (/* reexport safe */ _useGetThemedIcon_mjs__WEBPACK_IMPORTED_MODULE_3__.useGetThemedIcon),
/* harmony export */   validPseudoKeys: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.validPseudoKeys),
/* harmony export */   validStyles: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.validStyles),
/* harmony export */   withStaticProperties: () => (/* reexport safe */ _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__.withStaticProperties)
/* harmony export */ });
/* harmony import */ var _tamagui_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tamagui/helpers */ "../../node_modules/@tamagui/helpers/dist/esm/index.mjs");
/* harmony import */ var _prevent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prevent.mjs */ "../../node_modules/@tamagui/helpers-tamagui/dist/esm/prevent.mjs");
/* harmony import */ var _useCurrentColor_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useCurrentColor.mjs */ "../../node_modules/@tamagui/helpers-tamagui/dist/esm/useCurrentColor.mjs");
/* harmony import */ var _useGetThemedIcon_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useGetThemedIcon.mjs */ "../../node_modules/@tamagui/helpers-tamagui/dist/esm/useGetThemedIcon.mjs");




//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/helpers-tamagui/dist/esm/prevent.mjs":
/*!************************************************************************!*\
  !*** ../../node_modules/@tamagui/helpers-tamagui/dist/esm/prevent.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   prevent: () => (/* binding */ prevent)
/* harmony export */ });
const prevent = e => [e.preventDefault(), e.stopPropagation()];

//# sourceMappingURL=prevent.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/helpers-tamagui/dist/esm/useCurrentColor.mjs":
/*!********************************************************************************!*\
  !*** ../../node_modules/@tamagui/helpers-tamagui/dist/esm/useCurrentColor.mjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useCurrentColor: () => (/* binding */ useCurrentColor)
/* harmony export */ });
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/hooks/useTheme.mjs");
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/createVariable.mjs");

const useCurrentColor = colorProp => {
  const theme = (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_0__.useTheme)();
  return colorProp ? (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_1__.getVariable)(colorProp) : theme[colorProp]?.get() || theme.color?.get();
};

//# sourceMappingURL=useCurrentColor.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/helpers-tamagui/dist/esm/useGetThemedIcon.mjs":
/*!*********************************************************************************!*\
  !*** ../../node_modules/@tamagui/helpers-tamagui/dist/esm/useGetThemedIcon.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useGetThemedIcon: () => (/* binding */ useGetThemedIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _useCurrentColor_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useCurrentColor.mjs */ "../../node_modules/@tamagui/helpers-tamagui/dist/esm/useCurrentColor.mjs");


const useGetThemedIcon = props => {
  const color = (0,_useCurrentColor_mjs__WEBPACK_IMPORTED_MODULE_1__.useCurrentColor)(props.color);
  return el => el && (react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(el) ? react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(el, {
    ...props,
    color,
    // @ts-expect-error
    ...el.props
  }) : react__WEBPACK_IMPORTED_MODULE_0___default().createElement(el, props));
};

//# sourceMappingURL=useGetThemedIcon.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/shorthands/dist/esm/index.mjs":
/*!*****************************************************************!*\
  !*** ../../node_modules/@tamagui/shorthands/dist/esm/index.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   shorthands: () => (/* binding */ shorthands)
/* harmony export */ });
const shorthands = {
  // web-only
  ussel: "userSelect",
  cur: "cursor",
  // tamagui
  pe: "pointerEvents",
  // text
  col: "color",
  ff: "fontFamily",
  fos: "fontSize",
  fost: "fontStyle",
  fow: "fontWeight",
  ls: "letterSpacing",
  lh: "lineHeight",
  ta: "textAlign",
  tt: "textTransform",
  ww: "wordWrap",
  // view
  ac: "alignContent",
  ai: "alignItems",
  als: "alignSelf",
  b: "bottom",
  bc: "backgroundColor",
  bg: "backgroundColor",
  bbc: "borderBottomColor",
  bblr: "borderBottomLeftRadius",
  bbrr: "borderBottomRightRadius",
  bbw: "borderBottomWidth",
  blc: "borderLeftColor",
  blw: "borderLeftWidth",
  boc: "borderColor",
  br: "borderRadius",
  bs: "borderStyle",
  brw: "borderRightWidth",
  brc: "borderRightColor",
  btc: "borderTopColor",
  btlr: "borderTopLeftRadius",
  btrr: "borderTopRightRadius",
  btw: "borderTopWidth",
  bw: "borderWidth",
  dsp: "display",
  f: "flex",
  fb: "flexBasis",
  fd: "flexDirection",
  fg: "flexGrow",
  fs: "flexShrink",
  fw: "flexWrap",
  h: "height",
  jc: "justifyContent",
  l: "left",
  m: "margin",
  mah: "maxHeight",
  maw: "maxWidth",
  mb: "marginBottom",
  mih: "minHeight",
  miw: "minWidth",
  ml: "marginLeft",
  mr: "marginRight",
  mt: "marginTop",
  mx: "marginHorizontal",
  my: "marginVertical",
  o: "opacity",
  ov: "overflow",
  p: "padding",
  pb: "paddingBottom",
  pl: "paddingLeft",
  pos: "position",
  pr: "paddingRight",
  pt: "paddingTop",
  px: "paddingHorizontal",
  py: "paddingVertical",
  r: "right",
  shac: "shadowColor",
  shar: "shadowRadius",
  shof: "shadowOffset",
  shop: "shadowOpacity",
  t: "top",
  w: "width",
  zi: "zIndex"
};
shorthands.bls = "borderLeftStyle";
shorthands.brs = "borderRightStyle";
shorthands.bts = "borderTopStyle";
shorthands.bbs = "borderBottomStyle";
shorthands.bxs = "boxSizing";
shorthands.bxsh = "boxShadow";
shorthands.ox = "overflowX";
shorthands.oy = "overflowY";

//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/stacks/dist/esm/NestingContext.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/@tamagui/stacks/dist/esm/NestingContext.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ButtonNestingContext: () => (/* binding */ ButtonNestingContext)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const ButtonNestingContext = react__WEBPACK_IMPORTED_MODULE_0___default().createContext(!1);

//# sourceMappingURL=NestingContext.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/stacks/dist/esm/ThemeableStack.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/@tamagui/stacks/dist/esm/ThemeableStack.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ThemeableStack: () => (/* binding */ ThemeableStack),
/* harmony export */   themeableVariants: () => (/* binding */ themeableVariants)
/* harmony export */ });
/* harmony import */ var _tamagui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tamagui/core */ "../../node_modules/@tamagui/web/dist/esm/styled.mjs");
/* harmony import */ var _Stacks_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Stacks.mjs */ "../../node_modules/@tamagui/stacks/dist/esm/Stacks.mjs");
/* harmony import */ var _variants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variants.mjs */ "../../node_modules/@tamagui/stacks/dist/esm/variants.mjs");



const chromelessStyle = {
    backgroundColor: "transparent",
    borderColor: "transparent",
    shadowColor: "transparent",
    hoverStyle: {
      borderColor: "transparent"
    }
  },
  themeableVariants = {
    backgrounded: {
      true: {
        backgroundColor: "$background"
      }
    },
    radiused: _variants_mjs__WEBPACK_IMPORTED_MODULE_0__.radiused,
    hoverTheme: _variants_mjs__WEBPACK_IMPORTED_MODULE_0__.hoverTheme,
    pressTheme: _variants_mjs__WEBPACK_IMPORTED_MODULE_0__.pressTheme,
    focusTheme: _variants_mjs__WEBPACK_IMPORTED_MODULE_0__.focusTheme,
    circular: _variants_mjs__WEBPACK_IMPORTED_MODULE_0__.circular,
    padded: _variants_mjs__WEBPACK_IMPORTED_MODULE_0__.padded,
    elevate: _variants_mjs__WEBPACK_IMPORTED_MODULE_0__.elevate,
    bordered: _variants_mjs__WEBPACK_IMPORTED_MODULE_0__.bordered,
    transparent: {
      true: {
        backgroundColor: "transparent"
      }
    },
    chromeless: {
      true: chromelessStyle,
      all: {
        ...chromelessStyle,
        hoverStyle: chromelessStyle,
        pressStyle: chromelessStyle,
        focusStyle: chromelessStyle
      }
    }
  },
  ThemeableStack = (0,_tamagui_core__WEBPACK_IMPORTED_MODULE_1__.styled)(_Stacks_mjs__WEBPACK_IMPORTED_MODULE_2__.YStack, {
    variants: themeableVariants
  });

//# sourceMappingURL=ThemeableStack.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/stacks/dist/esm/variants.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@tamagui/stacks/dist/esm/variants.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   bordered: () => (/* binding */ bordered),
/* harmony export */   circular: () => (/* binding */ circular),
/* harmony export */   elevate: () => (/* binding */ elevate),
/* harmony export */   focusTheme: () => (/* binding */ focusTheme),
/* harmony export */   hoverTheme: () => (/* binding */ hoverTheme),
/* harmony export */   padded: () => (/* binding */ padded),
/* harmony export */   pressTheme: () => (/* binding */ pressTheme),
/* harmony export */   radiused: () => (/* binding */ radiused)
/* harmony export */ });
/* harmony import */ var _getElevation_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getElevation.mjs */ "../../node_modules/@tamagui/stacks/dist/esm/getElevation.mjs");

const elevate = {
    true: (_, extras) => (0,_getElevation_mjs__WEBPACK_IMPORTED_MODULE_0__.getElevation)(extras.props.size, extras)
  },
  bordered = (val, {
    props
  }) => ({
    // TODO size it with size in '...size'
    borderWidth: typeof val == "number" ? val : 1,
    borderColor: "$borderColor",
    ...(props.hoverTheme && {
      hoverStyle: {
        borderColor: "$borderColorHover"
      }
    }),
    ...(props.pressTheme && {
      pressStyle: {
        borderColor: "$borderColorPress"
      }
    }),
    ...(props.focusTheme && {
      focusStyle: {
        borderColor: "$borderColorFocus"
      }
    })
  }),
  padded = {
    true: (_, extras) => {
      const {
        tokens,
        props
      } = extras;
      return {
        padding: tokens.space[props.size] || tokens.space.$true
      };
    }
  },
  radiused = {
    true: (_, extras) => {
      const {
        tokens,
        props
      } = extras;
      return {
        borderRadius: tokens.radius[props.size] || tokens.radius.$true
      };
    }
  },
  circularStyle = {
    borderRadius: 1e5,
    padding: 0
  },
  circular = {
    true: (_, {
      props,
      tokens
    }) => {
      if (!("size" in props)) return circularStyle;
      const size = typeof props.size == "number" ? props.size : tokens.size[props.size];
      return {
        ...circularStyle,
        width: size,
        height: size,
        maxWidth: size,
        maxHeight: size,
        minWidth: size,
        minHeight: size
      };
    }
  },
  hoverTheme = {
    true: {
      hoverStyle: {
        backgroundColor: "$backgroundHover",
        borderColor: "$borderColorHover"
      }
    },
    false: {}
  },
  pressTheme = {
    true: {
      cursor: "pointer",
      pressStyle: {
        backgroundColor: "$backgroundPress",
        borderColor: "$borderColorPress"
      }
    },
    false: {}
  },
  focusTheme = {
    true: {
      focusStyle: {
        backgroundColor: "$backgroundFocus",
        borderColor: "$borderColorFocus"
      }
    },
    false: {}
  };

//# sourceMappingURL=variants.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/text/dist/esm/SizableText.mjs":
/*!*****************************************************************!*\
  !*** ../../node_modules/@tamagui/text/dist/esm/SizableText.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SizableText: () => (/* binding */ SizableText)
/* harmony export */ });
/* harmony import */ var _tamagui_get_font_sized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tamagui/get-font-sized */ "../../node_modules/@tamagui/get-font-sized/dist/esm/index.mjs");
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/styled.mjs");
/* harmony import */ var _tamagui_web__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tamagui/web */ "../../node_modules/@tamagui/web/dist/esm/views/Text.mjs");
/* provided dependency */ var process = __webpack_require__(/*! ../../node_modules/process/browser.js */ "../../node_modules/process/browser.js");


const SizableText = (0,_tamagui_web__WEBPACK_IMPORTED_MODULE_1__.styled)(_tamagui_web__WEBPACK_IMPORTED_MODULE_2__.Text, {
  name: "SizableText",
  fontFamily: "$body",
  variants: {
    unstyled: {
      false: {
        size: "$true",
        color: "$color"
      }
    },
    size: _tamagui_get_font_sized__WEBPACK_IMPORTED_MODULE_0__.getFontSized
  },
  defaultVariants: {
    unstyled: process.env.TAMAGUI_HEADLESS === "1"
  }
});
SizableText.staticConfig.variants.fontFamily = {
  "...": (_val, extras) => {
    const sizeProp = extras.props.size,
      fontSizeProp = extras.props.fontSize,
      size = sizeProp === "$true" && fontSizeProp ? fontSizeProp : extras.props.size || "$true";
    return (0,_tamagui_get_font_sized__WEBPACK_IMPORTED_MODULE_0__.getFontSized)(size, extras);
  }
};

//# sourceMappingURL=SizableText.mjs.map


/***/ }),

/***/ "../../node_modules/@tamagui/text/dist/esm/wrapChildrenInText.mjs":
/*!************************************************************************!*\
  !*** ../../node_modules/@tamagui/text/dist/esm/wrapChildrenInText.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   wrapChildrenInText: () => (/* binding */ wrapChildrenInText)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/react/jsx-runtime.js");


function wrapChildrenInText(TextComponent, propsIn, extraProps) {
  const {
    children,
    textProps,
    size,
    noTextWrap,
    color,
    fontFamily,
    fontSize,
    fontWeight,
    letterSpacing,
    textAlign,
    fontStyle,
    maxFontSizeMultiplier
  } = propsIn;
  if (noTextWrap || !children) return [children];
  const props = {
    ...extraProps
  };
  return color && (props.color = color), fontFamily && (props.fontFamily = fontFamily), fontSize && (props.fontSize = fontSize), fontWeight && (props.fontWeight = fontWeight), letterSpacing && (props.letterSpacing = letterSpacing), textAlign && (props.textAlign = textAlign), size && (props.size = size), fontStyle && (props.fontStyle = fontStyle), maxFontSizeMultiplier && (props.maxFontSizeMultiplier = maxFontSizeMultiplier), react__WEBPACK_IMPORTED_MODULE_0___default().Children.toArray(children).map((child, index) => typeof child == "string" ?
  // so "data-disable-theme" is a hack to fix themeInverse, don't ask me why
  /* @__PURE__ */
  (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TextComponent, {
    ...props,
    ...textProps,
    children: child
  }, index) : child);
}

//# sourceMappingURL=wrapChildrenInText.mjs.map


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_tamagui_button_dist_esm_Button_mjs-node_modules_tamagui_shorthands_dist_-f03cd4.iframe.bundle.js.map